# -*- coding: utf-8 -*-
"""Assignment7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kzjLbxS58oZ1GtB1QwgBi1HUo-ItmbgO
"""

from sklearn import tree
from sklearn import svm
import graphviz 
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.metrics import f1_score
from sklearn.metrics import  accuracy_score
iris = load_iris()
X, y = iris.data, iris.target
testSize=[0.1,0.2,0.3,0.34,0.4]
for tt in testSize:
  X_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target, test_size=tt, shuffle=False)
  X_val, X_test, y_val, y_test = train_test_split(X_test, y_test, test_size=0.5, shuffle=False)
  clf = tree.DecisionTreeClassifier()
  clf1=svm.SVC(gamma=0.5)
  clf = clf.fit(X_train, y_train)
  clf1 =clf1.fit(X_train, y_train)

  # Predict the value of the digit on the test subset
  predicted = clf1.predict(X_test)
  print("spilt: ",tt, " classifier: SVM Accuracy Score: ",accuracy_score(y_test,predicted),"F1 Score: ",f1_score(y_test,predicted,average='micro'))

  predicted = clf.predict(X_test)
  print("spilt: ",tt, " classifier: Decision Tree Accuracy Score: ",accuracy_score(y_test,predicted),"F1 Score: ",f1_score(y_test,predicted,average='micro'))